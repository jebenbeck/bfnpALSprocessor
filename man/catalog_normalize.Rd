% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/catalog_normalize.R
\name{catalog_normalize}
\alias{catalog_normalize}
\title{Normalize point clouds}
\usage{
catalog_normalize(
  lascatalog,
  algorithm = tin(),
  dtm_path = NULL,
  output_path,
  filename_convention = "{ORIGINALFILENAME}",
  parallel = FALSE,
  n_cores = 2
)
}
\arguments{
\item{lascatalog}{object of class \code{lascatalog}. Needs to have classified ground points.}

\item{algorithm}{(1) An algorithm used for spatial interpolation of the point cloud data, uses the ones available
via \code{\link[lidR:normalize]{lidR::normalize_height()}} or (2) the character vector "dtm" when a dtm is available and should be used. Defaults
to tin().}

\item{dtm_path}{character path pointing to raster dataset representing the DTM of the covered area}

\item{output_path}{character path to the folder where the new files should be exported to}

\item{filename_convention}{character defining the filenames of the generated laz files following lidR basics. Defaults
to the original filename}

\item{parallel}{logical of length 1. Should the computation be split over several cores? Defaults to FALSE.}

\item{n_cores}{numeric of length 1. If \code{parall = TRUE}, on how many cores should the computations be run on?
Defaults to the value registered in \code{options("cores")[[1]]}, or, if this is not available, to \verb{parallel::detectCores())}.}
}
\value{
lascatalog
}
\description{
This function normalizes point clouds to receive the height above ground as a additional attribute
}
\examples{
ctg <- readALSLAScatalog("/path/to/lazfiles")
ctg_normalized <- catalog_normalize(ctg, dtm_path = "D:/dtm_mosaic.tif", output_path = "D:/6_pointclouds_normalized",
filename_convention = "{ORIGINALFILENAME}", parallel = F, n_cores = 1)
load dtm data
apply options to lascatalog
function to normalize pointclouds::
normalize the data:
Create a temporary variable to store the original Z values
add the normalized Z values as a proper attribute for export:
plan parallel processing
apply function to lascatalog:
}
